version: "3.7"

########################### NETWORKS
# docker network create dsk_proxy
# docker network create socket_proxy
# Alternatively, you can specify the gateway and subnet to use
# docker network create --gateway 192.168.90.1 --subnet 192.168.90.0/24 t2_proxy
# Subnet range 192.168.0.0/16 covers 192.168.0.0 to 192.168.255.255
networks:
  dsk_proxy:
    external:
      name: dsk_proxy
  default:
    driver: bridge
  socket_proxy:
    external:
      name: socket_proxy

########################### SERVICES
services:

  # Docker Socket Proxy - Security Enchanced Proxy for Docker Socket
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    restart: unless-stopped
    networks:
      - socket_proxy
      # ipv4_address: 192.168.91.254 # You can specify a static IP
    privileged: true
    ports:
      - "$SOCKET_PROXY_PORT:2375"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Ouroboros
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portaienr
      - VOLUMES=1 # Portainer

  # dsk-netdata:
  #   container_name: dsk-netdata
  #   image: netdata/netdata
  #   depends_on:
  #     - socket-proxy
  #   restart: unless-stopped
  #   networks:
  #     - dsk_proxy
  #     - socket_proxy
  #   security_opt:
  #     - apparmor:unconfined
  #   # hostname: example.com # set to fqdn of host
  #   environment:
  #     - DOCKER_HOST=socket-proxy:2375
  #   ports:
  #     - "$NETDATA_PORT:19999"
  #   cap_add:
  #     - SYS_PTRACE
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro

  # Ombi - Media Requests
  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    restart: unless-stopped
    networks:
      - dsk_proxy
    ports:
      - "$OMBI_PORT:3579"
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/ombi:/config
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      # BASE_URL: /ombi #optional

  gluetun:
    image: qmcgaw/gluetun
#    image: gluetun-custom
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    networks:
      - dsk_proxy
    ports:
      - 8000:8000/tcp # HTTP Control Server
      - $TRANSMISSION_PORT:9091
      - 51413:51413
      - 51413:51413/udp
      - $SABNZBD_PORT:8080
      - $JACKETT_PORT:9117
      - $NZBHYDRA_PORT:5076
      - $RADARR_PORT:7878
      - $SONARR_PORT:8989
      - $PROWLARR_PORT:9696
      - $BAZARR_PORT:6767
    volumes:
      - $DOCKERDIR/gluetun:/gluetun
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      VPN_SERVICE_PROVIDER: expressvpn
      SERVER_CITIES: Dallas,Denver,Atlanta,Chicago
      OPENVPN_USER: $OPENVPN_USERNAME
      OPENVPN_PASSWORD: $OPENVPN_PASSWORD
      FIREWALL_OUTBOUND_SUBNETS: $LOCAL_NETWORK
      PUBLICIP_PERIOD: 1h
      UPDATER_PERIOD: 24h
      UPDATER_MIN_RATIO: 0.6
    restart: always

  ##############################################################################
  # Media Acquisition
  ##############################################################################
  # TransmissionBT - Torrent Downloader
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    depends_on:
      - gluetun
    healthcheck:
      test: [ "CMD-SHELL", "curl ifconfig.me || exit 1" ]
      interval: 10s
      timeout: 2s
      retries: 2
      start_period: 10s
    network_mode: service:gluetun
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
#      TRANSMISSION_WEB_HOME: /combustion-release/ #optional
      TRANSMISSION_WEB_HOME: /flood-for-transmission/ #optional
      USER: $TRANSMISSION_RPC_USERNAME #optional
      PASS: $TRANSMISSION_RPC_PASSWORD #optional
#      WHITELIST: 127.0.0.1,$SERVER_IP #optional
      PEERPORT: 51413 #optional
#      HOST_WHITELIST: 127.0.0.1,$SERVER_IP,trans.barinohub.com #optional
    volumes:
      - $DOCKERDIR/transmission:/config
      - $DOCKERDIR/downloads:/downloads
      - $DOCKERDIR/downloads:/watch
    #    ports:
    #      - 9091:9091
    #      - 51413:51413
    #      - 51413:51413/udp
    restart: unless-stopped

  #  # TransmissionBT - Torrent Downloader
  #  transmission-vpn:
  #    image: haugene/transmission-openvpn:latest
  #    container_name: transmission-vpn
  #    restart: unless-stopped
  #    healthcheck:
  #      test: ["CMD", "curl", "-m", "10", "--retry", "5", "https://hc-ping.com/7229c015-9f8e-4b05-b6ee-473102c86ebe"]
  #      interval: 30m
  #      timeout: 5s
  #      retries: 3
  #      start_period: 40s
  #    networks:
  #      - dsk_proxy
  #      - socket_proxy
  #      # t2_proxy:
  #      #   ipv4_address: 192.168.90.90
  #    security_opt:
  #      - no-new-privileges:true
  #    ports:
  #      - "443:443"
  #      - "$TRANSMISSION_PORT:9091"
  #      - "$SABNZBD_PORT:8080"
  #      - "$JACKETT_PORT:9117"
  #      - "$NZBHYDRA_PORT:5076"
  #      - "$RADARR_PORT:7878"
  #      - "$SONARR_PORT:8989"
  #      - "$PROWLARR_PORT:9696"
  #    cap_add:
  #      - NET_ADMIN
  #    devices:
  #      - /dev/net/tun
  #    dns:
  #      - 1.1.1.1
  #      - 1.0.0.1
  #    volumes:
  #      # - /etc/localtime:/etc/localtime:ro
  #      - $DOCKERDIR/transmission-vpn/data:/data
  #      - $DOCKERDIR/transmission-vpn/config:/config
  #      - $DOCKERDIR/downloads:/downloads
  #    environment:
  #      OPENVPN_PROVIDER: EXPRESSVPN
  #      OPENVPN_USERNAME: $OPENVPN_USERNAME
  #      OPENVPN_PASSWORD: $OPENVPN_PASSWORD
  #      OPENVPN_CONFIG: "my_expressvpn_usa_-_dallas_-_2_udp,my_expressvpn_usa_-_dallas_udp"
  #      OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60
  #      LOCAL_NETWORK: $LOCAL_NETWORK
  #      PUID: $PUID
  #      PGID: $PGID
  #      TZ: $TZ
  #      UMASK_SET: 2
  #      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
  #      TRANSMISSION_RPC_HOST_WHITELIST: "127.0.0.1,$SERVER_IP"
  #      TRANSMISSION_RPC_PASSWORD: $TRANSMISSION_RPC_PASSWORD
  #      TRANSMISSION_RPC_USERNAME: $TRANSMISSION_RPC_USERNAME
  #      TRANSMISSION_UMASK: 002
  #      TRANSMISSION_RATIO_LIMIT: 0.01
  #      TRANSMISSION_RATIO_LIMIT_ENABLED: "true"
  #      TRANSMISSION_ALT_SPEED_DOWN: 2000
  #      TRANSMISSION_ALT_SPEED_ENABLED: "false"
  #      TRANSMISSION_ALT_SPEED_UP: 15
  #      TRANSMISSION_SPEED_LIMIT_DOWN: 6000
  #      TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED: "true"
  #      TRANSMISSION_SPEED_LIMIT_UP: 30
  #      TRANSMISSION_SPEED_LIMIT_UP_ENABLED: "true"
  #      TRANSMISSION_INCOMPLETE_DIR: /downloads/incomplete
  #      TRANSMISSION_INCOMPLETE_DIR_ENABLED: "true"
  #      TRANSMISSION_WATCH_DIR: /downloads
  #      TRANSMISSION_WATCH_DIR_ENABLED: "true"
  #      TRANSMISSION_DOWNLOAD_DIR: /downloads/completed

  # SABnzbd - Binary newsgrabber (NZB downloader)
  # Disable SABNnzbd's built-in HTTPS support for traefik proxy to work
  # Needs trailing / if using PathPrefix
  sabnzbd:
    image: linuxserver/sabnzbd:latest
    depends_on:
      - gluetun
    container_name: sabnzbd
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl ifconfig.me || exit 1" ]
      interval: 10s
      timeout: 2s
      retries: 2
      start_period: 10s
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/sabnzbd:/config
      - $DOCKERDIR/downloads:/downloads
      - $DOCKERDIR/downloads/incomplete:/incomplete-downloads
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 002
  #    labels:
  #      - "autoheal=true"

  # Jackett - Torrent proxy
  # Set url_base in Jackett settings if using PathPrefix
  jackett:
    image: linuxserver/jackett:latest
    depends_on:
      - gluetun
    container_name: jackett
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl ifconfig.me || exit 1" ]
      interval: 10s
      timeout: 2s
      retries: 2
      start_period: 10s
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/jackett:/config
      - $DOCKERDIR/downloads:/downloads
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
  #    labels:
  #      - "autoheal=true"

  # NZBHydra2 - NZB meta search
  hydra:
    image: linuxserver/nzbhydra2:latest
    depends_on:
      - gluetun
    container_name: hydra
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl ifconfig.me || exit 1" ]
      interval: 10s
      timeout: 2s
      retries: 2
      start_period: 10s
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/hydra2:/config
      - $DOCKERDIR/downloads:/downloads
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
  #    labels:
  #      - "autoheal=true"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    depends_on:
      - gluetun
    container_name: prowlarr
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl ifconfig.me || exit 1" ]
      interval: 10s
      timeout: 2s
      retries: 2
      start_period: 10s
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/prowlarr:/config
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
  #    labels:
  #      - "autoheal=true"

  # Radarr - Movie management
  # Set url_base in radarr settings if using PathPrefix
  radarr:
    # image: aront/radarr #for mp4_automator support
    image: linuxserver/radarr:latest
    depends_on:
      - gluetun
    container_name: radarr
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl ifconfig.me || exit 1" ]
      interval: 10s
      timeout: 2s
      retries: 2
      start_period: 10s
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/radarr:/config
      - $DOCKERDIR/downloads:/downloads
      - /Volumes/Media:/nas
      # - $DOCKERDIR/shared/mp4_automator:/config_mp4_automator
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
  #    labels:
  #      - "autoheal=true"

  # Sonarr - TV Shows management
  # Set url_base in sonarr settings if using PathPrefix
  sonarr:
    # image: aront/sonarr  #for mp4_automator support
    image: linuxserver/sonarr:latest
    depends_on:
      - gluetun
    container_name: sonarr
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl ifconfig.me || exit 1" ]
      interval: 10s
      timeout: 2s
      retries: 2
      start_period: 10s
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/sonarr:/config
      - $DOCKERDIR/downloads:/downloads
      - /Volumes/Media:/nas
    #   - "$DOCKERDIR/shared/mp4_automator:/config_mp4_automator:rw"
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
  #    labels:
  #      - "autoheal=true"

  # Bazarr - Subtitle Management
  # Set url_base in sonarr settings if using PathPrefix
  bazarr:
    image: linuxserver/bazarr:latest
    depends_on:
      - gluetun
    container_name: bazarr
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl ifconfig.me || exit 1" ]
      interval: 10s
      timeout: 2s
      retries: 2
      start_period: 10s
    network_mode: service:gluetun
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/bazarr:/config
      - /Volumes/Media:/nas
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ


  # # Lazylibrarian  – Ebooks and Management
  # lazylibrarian:
  #   image: linuxserver/lazylibrarian
  #   depends_on:
  #     - transmission-vpn
  #   container_name: lazylibrarian
  #   restart: unless-stopped
  #   # healthcheck:
  #   #   test: ["CMD", "curl", "-m", "10", "--retry", "5", "https://hc-ping.com/6bf38ae6-9a69-4d41-b087-fc96c450426b"]
  #   #   interval: 30m
  #   #   timeout: 5s
  #   #   retries: 3
  #   #   start_period: 40s
  #   # networks:
  #   #   - t2_proxy
  #   network_mode: service:transmission-vpn
  #   security_opt:
  #     - no-new-privileges:true
  #   # ports:
  #   #  - "$LAZYLIBRARIAN_PORT:5299"
  #   volumes:
  #     - $DOCKERDIR/lazylibrarian:/config
  #     - $DOCKERDIR/downloads:/downloads
  #     # - /Volumes/Media:/nas
  #     - $DOCKERDIR/calibre/books:/books:rw
  #     # - "/etc/localtime:/etc/localtime:ro"
  #   environment:
  #     PUID: $PUID
  #     PGID: $PGID
  #     TZ: $TZ
