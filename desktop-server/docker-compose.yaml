name: DesktopServer

x-service-base: &service-base
    network_mode: service:gluetun
    depends_on:
        - gluetun
    restart: unless-stopped
    healthcheck:
        test: ["CMD-SHELL", "curl ifconfig.me || exit 1"]
        interval: 10s
        timeout: 2s
        retries: 2
        start_period: 10s
    security_opt:
        - no-new-privileges:true

x-env-common: &env-common
    PUID: $PUID
    PGID: $PGID
    TZ: $TZ

########################### NETWORKS
# Alternatively, you can specify the gateway and subnet to use
# docker network create --gateway 192.168.90.1 --subnet 192.168.90.0/24 t2_proxy
# Subnet range 192.168.0.0/16 covers 192.168.0.0 to 192.168.255.255
networks:
    dsk_proxy:
        name: dsk_proxy
        driver: bridge
    socket_proxy:
        name: socket_proxy
        driver: bridge

########################### SERVICES
services:
    # Docker Socket Proxy - Security Enchanced Proxy for Docker Socket
    socket-proxy:
        container_name: socket-proxy
        image: tecnativa/docker-socket-proxy
        restart: unless-stopped
        networks:
            - socket_proxy
            # ipv4_address: 192.168.91.254 # You can specify a static IP
        privileged: true
        ports:
            - "$SOCKET_PROXY_PORT:2375"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        environment:
            - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
            ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
            # 0 to revoke access.
            # 1 to grant access.
            ## Granted by Default
            - EVENTS=1
            - PING=1
            - VERSION=1
            ## Revoked by Default
            # Security critical
            - AUTH=0
            - SECRETS=0
            - POST=0 # Ouroboros
            # Not always needed
            - BUILD=0
            - COMMIT=0
            - CONFIGS=0
            - CONTAINERS=1 # Traefik, portainer, etc.
            - DISTRIBUTION=0
            - EXEC=0
            - IMAGES=1 # Portainer
            - INFO=1 # Portainer
            - NETWORKS=1 # Portainer
            - NODES=0
            - PLUGINS=0
            - SERVICES=1 # Portainer
            - SESSION=0
            - SWARM=0
            - SYSTEM=0
            - TASKS=1 # Portaienr
            - VOLUMES=1 # Portainer

    # Netdata - https://learn.netdata.cloud/docs/netdata-agent/installation/docker#with-docker-socket-proxy
    netdata:
        image: netdata/netdata:latest
        container_name: netdata
        depends_on:
            - socket-proxy
        restart: unless-stopped
        networks:
            - dsk_proxy
            - socket_proxy
        security_opt:
            - apparmor:unconfined
        # hostname: example.com # set to fqdn of host
        environment:
            - DOCKER_HOST=socket-proxy:2375
        ports:
            - "$NETDATA_PORT:19999"
        cap_add:
            - SYS_PTRACE
        volumes:
            - $DOCKERDIR/netdata/config:/etc/netdata
            - $DOCKERDIR/netdata/lib:/var/lib/netdata
            - $DOCKERDIR/netdata/cache:/var/cache/netdata
            - /etc/passwd:/host/etc/passwd:ro
            - /etc/group:/host/etc/group:ro
            - /etc/localtime:/etc/localtime:ro
            - /etc/hostname:/host/etc/hostname:ro
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /etc/os-release:/host/etc/os-release:ro

    ##############################################################################
    # Media Requests
    ##############################################################################
    # Ombi - Media Requests     https://ombi.io
    ombi:
        image: lscr.io/linuxserver/ombi:latest
        container_name: ombi
        restart: unless-stopped
        networks:
            - dsk_proxy
        ports:
            - "$OMBI_PORT:3579"
        security_opt:
            - no-new-privileges:true
        volumes:
            - $DOCKERDIR/ombi:/config
        environment:
            <<: *env-common
            # BASE_URL: /ombi #optional

    # Overseerr - Media Requests    https://overseerr.dev
    overseerr:
        image: lscr.io/linuxserver/overseerr:latest
        container_name: overseerr
        restart: unless-stopped
        networks:
            - dsk_proxy
        ports:
            - $OVERSEERR_PORT:5055
        volumes:
            - $DOCKERDIR/overseerr:/config
        environment:
            <<: *env-common

    ##############################################################################
    # VPN
    ##############################################################################
    gluetun:
        image: qmcgaw/gluetun
        #    image: gluetun-custom
        container_name: gluetun
        cap_add:
            - NET_ADMIN
        # devices:
        #   - /dev/net/tun:/dev/net/tun
        networks:
            - dsk_proxy
        ports:
            - 8000:8000/tcp # HTTP Control Server
            # Connecting Services
            - $TRANSMISSION_PORT:9091
            - $TRANSMISSION_PEER_PORT:51413
            - $TRANSMISSION_PEER_PORT:51413/udp
            - $SABNZBD_PORT:8080
            - $RADARR_PORT:7878
            - $SONARR_PORT:8989
            - $PROWLARR_PORT:9696
            - $BAZARR_PORT:6767
        volumes:
            - $DOCKERDIR/gluetun/servers.json:/gluetun/servers.json
            # - $DOCKERDIR/gluetun/custom_configs/my-expressvpn.conf:/gluetun/custom.conf:ro    # This is for the Custom Config.
        environment:
            <<: *env-common
            VPN_TYPE: openvpn
            OPENVPN_USER: $OPENVPN_USERNAME
            OPENVPN_PASSWORD: $OPENVPN_PASSWORD
            FIREWALL_OUTBOUND_SUBNETS: $LOCAL_NETWORK
            PUBLICIP_ENABLED: true

            # Express VPN
            VPN_SERVICE_PROVIDER: expressvpn
            SERVER_CITIES: Dallas,Denver,Atlanta
            UPDATER_PERIOD: 24h
            # BLOCK_MALICIOUS: off      # may need to turn this off (on by default) if we see that the server update is blocked.)
            # UPDATER_MIN_RATIO: 0.6    # Might need to turn this on if we see that the servers.json file hasn't been updated due to error rate.

            # Custom VPN
            # VPN_SERVICE_PROVIDER: custom
            # OPENVPN_CUSTOM_CONFIG: /gluetun/custom.conf
        restart: always

    ##############################################################################
    # Download Clients
    ##############################################################################
    # TransmissionBT - Torrent Downloader
    transmission:
        image: lscr.io/linuxserver/transmission:latest
        container_name: transmission
        <<: *service-base
        environment:
            <<: *env-common
            USER: $TRANSMISSION_RPC_USERNAME #optional
            PASS: $TRANSMISSION_RPC_PASSWORD #optional
            PEERPORT: 51413 # This disables random port selection.
            # TRANSMISSION_WEB_HOME: /combustion-release/ #optional
            # TRANSMISSION_WEB_HOME: /flood-for-transmission/ #optional
        volumes:
            - $DOCKERDIR/transmission:/config
            - $DOCKERDIR/download/downloads:/downloads
            - $DOCKERDIR/download/watch:/watch

    # SABnzbd - Binary newsgrabber (NZB downloader)
    # Disable SABNnzbd's built-in HTTPS support for traefik proxy to work
    # Needs trailing / if using PathPrefix
    sabnzbd:
        image: lscr.io/linuxserver/sabnzbd:latest
        container_name: sabnzbd
        <<: *service-base
        volumes:
            - $DOCKERDIR/sabnzbd:/config
            - $DOCKERDIR/download/downloads:/downloads
            - $DOCKERDIR/download/watch:/watch
            - $DOCKERDIR/download/downloads/incomplete:/incomplete-downloads
        environment:
            <<: *env-common
            UMASK_SET: 002
    #    labels:
    #      - "autoheal=true"

    ##############################################################################
    # DVR Services
    ##############################################################################
    prowlarr:
        image: lscr.io/linuxserver/prowlarr:develop
        container_name: prowlarr
        <<: *service-base
        volumes:
            - $DOCKERDIR/prowlarr:/config
        environment:
            <<: *env-common
    #    labels:
    #      - "autoheal=true"

    # Radarr - Movie management
    # Set url_base in radarr settings if using PathPrefix
    radarr:
        # image: aront/radarr #for mp4_automator support
        image: lscr.io/linuxserver/radarr:latest
        container_name: radarr
        <<: *service-base
        volumes:
            - $DOCKERDIR/radarr:/config
            - $DOCKERDIR/download/downloads:/downloads
            - /Volumes/Media:/nas
            # - $DOCKERDIR/shared/mp4_automator:/config_mp4_automator
        environment:
            <<: *env-common
    #    labels:
    #      - "autoheal=true"

    # Sonarr - TV Shows management
    # Set url_base in sonarr settings if using PathPrefix
    sonarr:
        # image: aront/sonarr  #for mp4_automator support
        image: lscr.io/linuxserver/sonarr:latest
        container_name: sonarr
        <<: *service-base
        volumes:
            - $DOCKERDIR/sonarr:/config
            - $DOCKERDIR/download/downloads:/downloads
            - /Volumes/Media:/nas
        #   - "$DOCKERDIR/shared/mp4_automator:/config_mp4_automator:rw"
        environment:
            <<: *env-common
    #    labels:
    #      - "autoheal=true"

    # Bazarr - Subtitle Management
    # Set url_base in sonarr settings if using PathPrefix
    bazarr:
        image: lscr.io/linuxserver/bazarr:latest
        container_name: bazarr
        <<: *service-base
        volumes:
            - $DOCKERDIR/bazarr:/config
            - /Volumes/Media:/nas
        environment:
            <<: *env-common

    # # Lazylibrarian  â€“ Ebooks and Management
    # lazylibrarian:
    #   image: linuxserver/lazylibrarian
    #   depends_on:
    #     - transmission-vpn
    #   container_name: lazylibrarian
    #   restart: unless-stopped
    #   # healthcheck:
    #   #   test: ["CMD", "curl", "-m", "10", "--retry", "5", "https://hc-ping.com/6bf38ae6-9a69-4d41-b087-fc96c450426b"]
    #   #   interval: 30m
    #   #   timeout: 5s
    #   #   retries: 3
    #   #   start_period: 40s
    #   # networks:
    #   #   - t2_proxy
    #   network_mode: service:transmission-vpn
    #   security_opt:
    #     - no-new-privileges:true
    #   # ports:
    #   #  - "$LAZYLIBRARIAN_PORT:5299"
    #   volumes:
    #     - $DOCKERDIR/lazylibrarian:/config
    #     - $DOCKERDIR/downloads:/downloads
    #     # - /Volumes/Media:/nas
    #     - $DOCKERDIR/calibre/books:/books:rw
    #     # - "/etc/localtime:/etc/localtime:ro"
    #   environment:
    #     PUID: $PUID
    #     PGID: $PGID
    #     TZ: $TZ
