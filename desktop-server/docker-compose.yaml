version: "3.7"

########################### NETWORKS
# docker network create dsk_proxy
# docker network create socket_proxy
# Alternatively, you can specify the gateway and subnet to use
# docker network create --gateway 192.168.90.1 --subnet 192.168.90.0/24 t2_proxy
# Subnet range 192.168.0.0/16 covers 192.168.0.0 to 192.168.255.255
networks:
  dsk_proxy:
    external:
      name: dsk_proxy
  default:
    driver: bridge
  socket_proxy:
    external:
      name: socket_proxy

########################### SERVICES
services:

  # Docker Socket Proxy - Security Enchanced Proxy for Docker Socket
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    restart: unless-stopped
    networks:
      - socket_proxy
        # ipv4_address: 192.168.91.254 # You can specify a static IP
    privileged: true
    ports:
     - "$SOCKET_PROXY_PORT:2375"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Ouroboros
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portaienr
      - VOLUMES=1 # Portainer

  dsk-netdata:
    container_name: dsk-netdata
    image: netdata/netdata
    depends_on:
      - socket-proxy
    restart: unless-stopped
    networks:
      - dsk_proxy
      - socket_proxy
    security_opt:
      - apparmor:unconfined
    # hostname: example.com # set to fqdn of host
    environment:
      - DOCKER_HOST=socket-proxy:2375
    ports:
      - "$NETDATA_PORT:19999"
    cap_add:
      - SYS_PTRACE
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro

  # Portainer - WebUI for Containers
  # portainer:
  #   container_name: portainer
  #   image: portainer/portainer:latest
  #   depends_on:
  #     - socket-proxy
  #   restart: unless-stopped
  #   networks:
  #     - dsk_proxy
  #     - socket_proxy
  #   security_opt:
  #     - no-new-privileges:true
  #   ports:
  #    - "$PORTAINER_PORT:9000"
  #   volumes:
  #     - $DOCKERDIR/portainer/data:/data
  #   environment:
  #     - TZ=$TZ

  # Ombi - Media Requests
  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    restart: unless-stopped
    networks:
      - dsk_proxy
    ports:
     - "$OMBI_PORT:3579"
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/ombi:/config
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      # BASE_URL: /ombi #optional

  ##############################################################################
  # Media Acquisition
  ##############################################################################
  # TransmissionBT - Torrent Downloader
  transmission-vpn:
    image: haugene/transmission-openvpn:latest
    container_name: transmission-vpn
    restart: unless-stopped
    healthcheck:
      start_period: "10s"
      interval: "5s"
    networks:
      - dsk_proxy
      # t2_proxy:
      #   ipv4_address: 192.168.90.90
    security_opt:
      - no-new-privileges:true
    ports:
      - "$TRANSMISSION_PORT:9091"
      - "$SABNZBD_PORT:8080"
      - "$JACKETT_PORT:9117"
      - "$NZBHYDRA_PORT:5076"
      - "443:443"
      - "$RADARR_PORT:7878"
      - "$SONARR_PORT:8989"
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      # - /etc/localtime:/etc/localtime:ro
      - $DOCKERDIR/transmission-vpn/data:/data
      - $DOCKERDIR/transmission-vpn/config:/config
      - $DOCKERDIR/downloads:/downloads
    environment:
      OPENVPN_PROVIDER: EXPRESSVPN
      OPENVPN_USERNAME: $OPENVPN_USERNAME
      OPENVPN_PASSWORD: $OPENVPN_PASSWORD
      OPENVPN_CONFIG: "my_expressvpn_usa_-_dallas_-_2_udp"
      OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60
      LOCAL_NETWORK: $LOCAL_NETWORK
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 2
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
      TRANSMISSION_RPC_HOST_WHITELIST: "127.0.0.1,$SERVER_IP"
      TRANSMISSION_RPC_PASSWORD: $TRANSMISSION_RPC_PASSWORD
      TRANSMISSION_RPC_USERNAME: $TRANSMISSION_RPC_USERNAME
      TRANSMISSION_UMASK: 002
      TRANSMISSION_RATIO_LIMIT: 0.01
      TRANSMISSION_RATIO_LIMIT_ENABLED: "true"
      TRANSMISSION_ALT_SPEED_DOWN: 2000
      TRANSMISSION_ALT_SPEED_ENABLED: "false"
      TRANSMISSION_ALT_SPEED_UP: 15
      TRANSMISSION_SPEED_LIMIT_DOWN: 6000
      TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED: "true"
      TRANSMISSION_SPEED_LIMIT_UP: 30
      TRANSMISSION_SPEED_LIMIT_UP_ENABLED: "true"
      TRANSMISSION_INCOMPLETE_DIR: /downloads/incomplete
      TRANSMISSION_INCOMPLETE_DIR_ENABLED: "true"
      TRANSMISSION_WATCH_DIR: /downloads
      TRANSMISSION_WATCH_DIR_ENABLED: "true"
      TRANSMISSION_DOWNLOAD_DIR: /downloads/completed

  # SABnzbd - Binary newsgrabber (NZB downloader)
  # Disable SABNnzbd's built-in HTTPS support for traefik proxy to work
  # Needs trailing / if using PathPrefix
  sabnzbd:
    image: linuxserver/sabnzbd:latest
    depends_on:
      - transmission-vpn
    container_name: sabnzbd
    restart: unless-stopped
    network_mode: service:transmission-vpn
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/sabnzbd:/config
      - $DOCKERDIR/downloads:/downloads
      - $DOCKERDIR/downloads/incomplete:/incomplete-downloads
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 002

  # Jackett - Torrent proxy
  # Set url_base in Jackett settings if using PathPrefix
  jackett:
    image: linuxserver/jackett:latest
    depends_on:
      - transmission-vpn
    container_name: jackett
    restart: unless-stopped
    network_mode: service:transmission-vpn
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/jackett:/config
      - $DOCKERDIR/downloads:/downloads
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ

  # NZBHydra2 - NZB meta search
  hydra:
    image: linuxserver/nzbhydra2:latest
    depends_on:
      - transmission-vpn
    container_name: hydra
    restart: unless-stopped
    network_mode: service:transmission-vpn
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/hydra2:/config
      - $DOCKERDIR/downloads:/downloads
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ

  # Radarr - Movie management
  # Set url_base in radarr settings if using PathPrefix
  radarr:
    # image: aront/radarr #for mp4_automator support
    image: linuxserver/radarr:preview
    depends_on:
      - transmission-vpn
    container_name: radarr
    restart: unless-stopped
    network_mode: service:transmission-vpn
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/radarr:/config
      - $DOCKERDIR/downloads:/downloads
      - /Volumes/Media:/nas
      # - $DOCKERDIR/shared/mp4_automator:/config_mp4_automator
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ

  # Sonarr - TV Shows management
  # Set url_base in sonarr settings if using PathPrefix
  sonarr:
    # image: aront/sonarr  #for mp4_automator support
    # build:
    #   context: "./specialized_images/sonarr"
    image: linuxserver/sonarr:preview
    depends_on:
      - transmission-vpn
    container_name: sonarr
    restart: unless-stopped
    network_mode: service:transmission-vpn
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/sonarr:/config
      - $DOCKERDIR/downloads:/downloads
      - /Volumes/Media:/nas
      # - /Users/barino/Development/home-servers/desktop-server/cron_tasks/sonarr_healthcheck:/etc/cron.d/sonarr_healthcheck
    #   - "$DOCKERDIR/shared/mp4_automator:/config_mp4_automator:rw"
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
